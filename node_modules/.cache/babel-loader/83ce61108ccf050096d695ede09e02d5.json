{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._baseUrl = config.baseUrl;\n    this._headers = config.headers;\n  }\n\n  _checkPromise(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl + \"/cards\", {\n      headers: this._headers\n    }).then(res => {\n      return this._checkPromise(res);\n    });\n  }\n\n  saveNewCard(nameInput, linkInput) {\n    return fetch(this._baseUrl + \"/cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: nameInput,\n        link: linkInput\n      })\n    }).then(res => {\n      return this._checkPromise(res);\n    });\n  }\n\n  getUserData() {\n    return fetch(this._baseUrl + \"/users/me\", {\n      headers: this._headers\n    }).then(res => {\n      return this._checkPromise(res);\n    });\n  }\n\n  saveUserData(nameInput, descriptionInput) {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: nameInput,\n        about: descriptionInput\n      })\n    }).then(res => {\n      return this._checkPromise(res);\n    });\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkPromise(res);\n    });\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n        method: \"PUT\",\n        headers: this._headers\n      }).then(res => {\n        return this._checkPromise(res);\n      });\n    } else {\n      return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n        method: \"DELETE\",\n        headers: this._headers\n      }).then(res => {\n        return this._checkPromise(res);\n      });\n    }\n  }\n\n  changeAvatar(linkInput) {\n    return fetch(this._baseUrl + \"/users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: linkInput\n      })\n    }).then(res => {\n      return this._checkPromise(res);\n    });\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-40\",\n  headers: {\n    authorization: \"242a0c65-83ea-4aa5-aad5-7b82cd182540\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","config","_baseUrl","baseUrl","_headers","headers","_checkPromise","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","saveNewCard","nameInput","linkInput","method","body","JSON","stringify","name","link","getUserData","saveUserData","descriptionInput","about","deleteCard","id","changeLikeCardStatus","isLiked","changeAvatar","avatar","api","authorization"],"sources":["/Users/elvira/Desktop/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(config) {\n    this._baseUrl = config.baseUrl;\n    this._headers = config.headers;\n  }\n  _checkPromise(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(this._baseUrl + \"/cards\", {\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkPromise(res);\n    });\n  }\n\n  saveNewCard(nameInput, linkInput) {\n    return fetch(this._baseUrl + \"/cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: nameInput,\n        link: linkInput,\n      }),\n    }).then((res) => {\n      return this._checkPromise(res);\n    });\n  }\n\n  getUserData() {\n    return fetch(this._baseUrl + \"/users/me\", {\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkPromise(res);\n    });\n  }\n\n  saveUserData(nameInput, descriptionInput) {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: nameInput,\n        about: descriptionInput,\n      }),\n    })\n      .then((res) => {\n        return this._checkPromise(res);\n      })}\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n      .then((res) => {\n        return this._checkPromise(res);\n      })\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n        method: \"PUT\",\n        headers: this._headers,\n      }).then((res) => {\n        return this._checkPromise(res);\n      });\n    }\n    else {\n        return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n          method: \"DELETE\",\n          headers: this._headers,\n        }).then((res) => {\n          return this._checkPromise(res);\n        });\n      }\n}\n\n  changeAvatar(linkInput) {\n    return fetch(this._baseUrl + \"/users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: linkInput,\n      }),\n    })\n        .then((res) => {\n          return this._checkPromise(res);\n        });\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-40\",\n  headers: {\n    authorization: \"242a0c65-83ea-4aa5-aad5-7b82cd182540\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}