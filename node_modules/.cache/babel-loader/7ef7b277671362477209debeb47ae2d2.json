{"ast":null,"code":"var _jsxFileName = \"/Users/elvira/Desktop/dev/mesto-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport closeIcon from './img/CloseIcon.svg';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport PopupImage from \"./ImagePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  function handleAddPlaceClick() {\n    setIsEditProfilePopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  const onEditProfile = {\n    name: 'editForm',\n    title: 'Редактировать профиль',\n    isOpen: false,\n    onClose: false,\n    children: '<> <label htmlFor=\"name-input\" className=\"form__label\">\\n' + '                            <input type=\"text\" name=\"nameInput\" id=\"name-input\" className=\"form__item form__item_el_name\" placeholder=\"Ваше имя\" maxLength={200} minLength={2} required />\\n' + '                            <span className=\"form__item-error name-input-error\" />\\n' + '                        </label>\\n' + '                        <label htmlFor=\"description-input\" className=\"form__label\">\\n' + '                            <input type=\"text\" name=\"descriptionInput\" id=\"description-input\" className=\"form__item form__item_el_description\" placeholder=\"О себе\" maxLength={400} minLength={2} required />\\n' + '                            <span className=\"form__item-error description-input-error\" />\\n' + '                        </label>\\n' + '                        <button type=\"submit\" className=\"button form__submit\" aria-label=\"Сохранить\" name=\"formSubmit\">\\n' + '                            Сохранить\\n' + '                        </button> </>'\n  };\n  const onAddPlace = {\n    name: 'addCard',\n    title: 'Новое место',\n    isOpen: false,\n    onClose: false,\n    children: ' <>                   <label htmlFor=\"place-input\" className=\"form__label\">\\n' + '                         <input type=\"text\" name=\"placeInput\" id=\"place-input\" className=\"form__item form__item_el_name\" placeholder=\"Название\" maxLength={30} minLength={2} required />\\n' + '                         <span className=\"form__item-error place-input-error\" />\\n' + '                     </label>\\n' + '                     <label htmlFor=\"url-input\" className=\"form__label\">\\n' + '                         <input type=\"url\" id=\"url-input\" name=\"urlInput\" className=\"form__item form__item_el_url\" placeholder=\"Ссылка на картинку\" minLength={2} required />\\n' + '                         <span className=\"form__item-error url-input-error\" />\\n' + '                     </label>\\n' + '                     <button type=\"submit\" className=\"button form__submit\" aria-label=\"Создать\" name=\"formSubmit\">\\n' + '                         Создать\\n' + '                     </button> </>' // handleChange: () => {\n    //     const [isAddPlacePopupOpen, setState]  = React.useState({false});\n    //     setState(!isAddPlacePopupOpen)}\n\n  };\n  const onEditAvatar = {\n    name: 'changeAvatar',\n    title: 'Обновить аватар',\n    isOpen: false,\n    onClose: false,\n    children: '<><label htmlFor=\"place-input\" className=\"form__label\">\\n' + '                         <input type=\"url\" name=\"avatarInput\" id=\"avatar-input\" className=\"form__item form__item_el_avatar\" placeholder=\"Ссылка на аватар\" minLength={2} required />\\n' + '                         <span className=\"form__item-error avatar-input-error\" />\\n' + '                     </label>\\n' + '                     <button type=\"submit\" className=\"button form__submit\" aria-label=\"Создать\" name=\"formSubmit\">\\n' + '                         Сохранить\\n' + '                     </button> </>' // handleChange: () => {\n    //     const [isEditProfilePopupOpen, setIsEditProfilePopupOpen]  = React.useState(false)\n    //     setIsEditProfilePopupOpen(!isEditProfilePopupOpen)}\n\n  }; // function closeAllPopups(isOpen, set) {\n  //     set(!isOpen)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        onEditAvatar: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        onAddPlace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        onEditProfile: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PopupImage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"Rj87Ze0sE3iWSjKjJOwXoHTe4VA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["closeIcon","React","useState","useEffect","Header","Main","Footer","PopupWithForm","PopupImage","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","onEditProfile","name","title","isOpen","onClose","children","onAddPlace","onEditAvatar"],"sources":["/Users/elvira/Desktop/dev/mesto-react/src/App.js"],"sourcesContent":["\nimport closeIcon from './img/CloseIcon.svg';\nimport React, { useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupWithForm from  './PopupWithForm'\nimport PopupImage from \"./ImagePopup\";\n\n\n\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen]  = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    function handleEditProfileClick () {\n        setIsEditProfilePopupOpen(!isEditProfilePopupOpen)\n    }\n\n    function handleEditAvatarClick () {\n        setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen)\n    }\n\n    function handleAddPlaceClick () {\n        setIsEditProfilePopupOpen(!isEditAvatarPopupOpen)\n    }\n    const onEditProfile = {\n        name: 'editForm',\n        title: 'Редактировать профиль',\n        isOpen: false,\n        onClose: false,\n        children: '<> <label htmlFor=\"name-input\" className=\"form__label\">\\n' +\n            '                            <input type=\"text\" name=\"nameInput\" id=\"name-input\" className=\"form__item form__item_el_name\" placeholder=\"Ваше имя\" maxLength={200} minLength={2} required />\\n' +\n            '                            <span className=\"form__item-error name-input-error\" />\\n' +\n            '                        </label>\\n' +\n            '                        <label htmlFor=\"description-input\" className=\"form__label\">\\n' +\n            '                            <input type=\"text\" name=\"descriptionInput\" id=\"description-input\" className=\"form__item form__item_el_description\" placeholder=\"О себе\" maxLength={400} minLength={2} required />\\n' +\n            '                            <span className=\"form__item-error description-input-error\" />\\n' +\n            '                        </label>\\n' +\n            '                        <button type=\"submit\" className=\"button form__submit\" aria-label=\"Сохранить\" name=\"formSubmit\">\\n' +\n            '                            Сохранить\\n' +\n            '                        </button> </>',\n\n\n    }\n\n    const onAddPlace = {\n        name: 'addCard',\n        title: 'Новое место',\n        isOpen: false,\n        onClose: false,\n        children: ' <>                   <label htmlFor=\"place-input\" className=\"form__label\">\\n' +\n            '                         <input type=\"text\" name=\"placeInput\" id=\"place-input\" className=\"form__item form__item_el_name\" placeholder=\"Название\" maxLength={30} minLength={2} required />\\n' +\n            '                         <span className=\"form__item-error place-input-error\" />\\n' +\n            '                     </label>\\n' +\n            '                     <label htmlFor=\"url-input\" className=\"form__label\">\\n' +\n            '                         <input type=\"url\" id=\"url-input\" name=\"urlInput\" className=\"form__item form__item_el_url\" placeholder=\"Ссылка на картинку\" minLength={2} required />\\n' +\n            '                         <span className=\"form__item-error url-input-error\" />\\n' +\n            '                     </label>\\n' +\n            '                     <button type=\"submit\" className=\"button form__submit\" aria-label=\"Создать\" name=\"formSubmit\">\\n' +\n            '                         Создать\\n' +\n            '                     </button> </>',\n        // handleChange: () => {\n        //     const [isAddPlacePopupOpen, setState]  = React.useState({false});\n        //     setState(!isAddPlacePopupOpen)}\n\n    }\n\n    const onEditAvatar = {\n        name: 'changeAvatar',\n        title:'Обновить аватар',\n        isOpen: false,\n        onClose: false,\n        children: '<><label htmlFor=\"place-input\" className=\"form__label\">\\n' +\n            '                         <input type=\"url\" name=\"avatarInput\" id=\"avatar-input\" className=\"form__item form__item_el_avatar\" placeholder=\"Ссылка на аватар\" minLength={2} required />\\n' +\n            '                         <span className=\"form__item-error avatar-input-error\" />\\n' +\n            '                     </label>\\n' +\n            '                     <button type=\"submit\" className=\"button form__submit\" aria-label=\"Создать\" name=\"formSubmit\">\\n' +\n            '                         Сохранить\\n' +\n            '                     </button> </>',\n        // handleChange: () => {\n        //     const [isEditProfilePopupOpen, setIsEditProfilePopupOpen]  = React.useState(false)\n        //     setIsEditProfilePopupOpen(!isEditProfilePopupOpen)}\n    }\n    // function closeAllPopups(isOpen, set) {\n    //     set(!isOpen)\n    // }\n\n  return (\n      <div className=\"root\">\n        <div className=\"page\">\n          <Header />\n          <Main />\n          <Footer />\n          <PopupWithForm onEditAvatar  />\n            <PopupWithForm onAddPlace />\n            <PopupWithForm onEditProfile />\n          <PopupImage />\n        </div>\n\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA,OAAOA,SAAP,MAAsB,qBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA2B,iBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAKA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAuDV,KAAK,CAACC,QAAN,CAAe,KAAf,CAA7D;EACA,MAAM,CAACU,mBAAD,EAAsBC,sBAAtB,IAAgDZ,KAAK,CAACC,QAAN,CAAe,KAAf,CAAtD;EACA,MAAM,CAACY,qBAAD,EAAwBC,wBAAxB,IAAoDd,KAAK,CAACC,QAAN,CAAe,KAAf,CAA1D;;EACA,SAASc,sBAAT,GAAmC;IAC/BL,yBAAyB,CAAC,CAACD,sBAAF,CAAzB;EACH;;EAED,SAASO,qBAAT,GAAkC;IAC9BF,wBAAwB,CAAC,CAACD,qBAAF,CAAxB;EACH;;EAED,SAASI,mBAAT,GAAgC;IAC5BP,yBAAyB,CAAC,CAACG,qBAAF,CAAzB;EACH;;EACD,MAAMK,aAAa,GAAG;IAClBC,IAAI,EAAE,UADY;IAElBC,KAAK,EAAE,uBAFW;IAGlBC,MAAM,EAAE,KAHU;IAIlBC,OAAO,EAAE,KAJS;IAKlBC,QAAQ,EAAE,8DACN,8LADM,GAEN,sFAFM,GAGN,oCAHM,GAIN,uFAJM,GAKN,iNALM,GAMN,6FANM,GAON,oCAPM,GAQN,2HARM,GASN,yCATM,GAUN;EAfc,CAAtB;EAoBA,MAAMC,UAAU,GAAG;IACfL,IAAI,EAAE,SADS;IAEfC,KAAK,EAAE,aAFQ;IAGfC,MAAM,EAAE,KAHO;IAIfC,OAAO,EAAE,KAJM;IAKfC,QAAQ,EAAE,kFACN,4LADM,GAEN,oFAFM,GAGN,iCAHM,GAIN,4EAJM,GAKN,iLALM,GAMN,kFANM,GAON,iCAPM,GAQN,sHARM,GASN,oCATM,GAUN,oCAfW,CAgBf;IACA;IACA;;EAlBe,CAAnB;EAsBA,MAAME,YAAY,GAAG;IACjBN,IAAI,EAAE,cADW;IAEjBC,KAAK,EAAC,iBAFW;IAGjBC,MAAM,EAAE,KAHS;IAIjBC,OAAO,EAAE,KAJQ;IAKjBC,QAAQ,EAAE,8DACN,wLADM,GAEN,qFAFM,GAGN,iCAHM,GAIN,sHAJM,GAKN,sCALM,GAMN,oCAXa,CAYjB;IACA;IACA;;EAdiB,CAArB,CAzDW,CAyEX;EACA;EACA;;EAEF,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,uBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,aAAD;QAAe,YAAY;MAA3B;QAAA;QAAA;QAAA;MAAA,QAJF,eAKI,QAAC,aAAD;QAAe,UAAU;MAAzB;QAAA;QAAA;QAAA;MAAA,QALJ,eAMI,QAAC,aAAD;QAAe,aAAa;MAA5B;QAAA;QAAA;QAAA;MAAA,QANJ,eAOE,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADJ;AAcD;;GA3FQf,G;;KAAAA,G;AA6FT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}